Logic

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Logic
{
    public class EmployeesRepository
    {
        public List<Employee>
    }
}

DatabaseAccess

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DataBaseAccess
{
    public class Database
    {
     
            private static Database instance;

            private string connectionString = @"Data Source= 31.147.204.119\PISERVER,1433; Initial Catalog = pubs; User = LabUser21; Password = Lab2021 ";

            private SqlConnection Connection { get; set; }

            public void Connect()
            {
                Connection = new SqlConnection(connectionString);
                Connection.Open();
            }

            public void Disconnect()
            {
                if (Connection.State != ConnectionState.Closed)
                {
                    Connection.Close();
                }
            }

            public static Database Instance
            {
                get
                {
                    if (instance == null)
                    {
                        instance = new Database();
                    }
                    return instance;
                }
            }

            public IDataReader GetDataReader(string sqlUpit)
            {
                SqlCommand sqlCommand = new SqlCommand(sqlUpit, Connection);
                return sqlCommand.ExecuteReader();
            }

            public object GetValue(string sqlUpit)
            {
                SqlCommand sqlCommand = new SqlCommand(sqlUpit, Connection);
                return sqlCommand.ExecuteScalar();
            }

            public int ExecuteCommand(string sqlUpit)
            {
                SqlCommand sqlCommand = new SqlCommand(sqlUpit, Connection);
                return sqlCommand.ExecuteNonQuery();
            }
        }
    }

ADO_Employees

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ADO_Employees
{
    public partial class FrmAddEmployee : Form
    {
        private EmployeeRepository _employeeRepository;
        public FrmAddEmployee(EmployeeRepository employeeRepository)
        {
            InitializeComponent();
            _employeeRepository = employeeRepository;
        }

        private void FrmAddEmployee_Load(object sender, EventArgs e)
        {
            cmbJob.DataSource = _employeeRepository.GetJobDesc();

            cmbPublisher.DataSource = _employeeRepository.GetPublisherName();

        }

        private void btnCancel_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void btnSave_Click(object sender, EventArgs e)
        {
            Job job = cmbJob.SelectedItem as Job;

            Publisher publisher = cmbPublisher.SelectedItem as Publisher;

            Employee noviEmployee = new Employee()
            {
                EmpId = txtEmpId.Text,
                FName = txtFName.Text,
                LName = txtFName.Text,
                JobId = job.JobId,
                PubId = publisher.PubId,
                HireDate = DateTime.Now
            };

            _employeeRepository.Insert(noviEmployee);

            this.Close();
        }
    }
}


namespace ADO_Employees
{
    partial class FrmAddEmployee
    {
        /// <summary>
        /// Required designer variable.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary>
        /// Clean up any resources being used.
        /// </summary>
        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Windows Form Designer generated code

        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            this.label1 = new System.Windows.Forms.Label();
            this.txtEmpId = new System.Windows.Forms.TextBox();
            this.txtFName = new System.Windows.Forms.TextBox();
            this.label2 = new System.Windows.Forms.Label();
            this.txtLName = new System.Windows.Forms.TextBox();
            this.label3 = new System.Windows.Forms.Label();
            this.cmbJob = new System.Windows.Forms.ComboBox();
            this.label4 = new System.Windows.Forms.Label();
            this.label5 = new System.Windows.Forms.Label();
            this.cmbPublisher = new System.Windows.Forms.ComboBox();
            this.btnSave = new System.Windows.Forms.Button();
            this.btnCancel = new System.Windows.Forms.Button();
            this.SuspendLayout();
            // 
            // label1
            // 
            this.label1.AutoSize = true;
            this.label1.Location = new System.Drawing.Point(24, 19);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(45, 13);
            this.label1.TabIndex = 0;
            this.label1.Text = "Emp_id:";
            // 
            // txtEmpId
            // 
            this.txtEmpId.Location = new System.Drawing.Point(102, 16);
            this.txtEmpId.Name = "txtEmpId";
            this.txtEmpId.Size = new System.Drawing.Size(131, 20);
            this.txtEmpId.TabIndex = 1;
            // 
            // txtFName
            // 
            this.txtFName.Location = new System.Drawing.Point(102, 42);
            this.txtFName.Name = "txtFName";
            this.txtFName.Size = new System.Drawing.Size(131, 20);
            this.txtFName.TabIndex = 3;
            // 
            // label2
            // 
            this.label2.AutoSize = true;
            this.label2.Location = new System.Drawing.Point(24, 45);
            this.label2.Name = "label2";
            this.label2.Size = new System.Drawing.Size(44, 13);
            this.label2.TabIndex = 2;
            this.label2.Text = "FName:";
            // 
            // txtLName
            // 
            this.txtLName.Location = new System.Drawing.Point(102, 68);
            this.txtLName.Name = "txtLName";
            this.txtLName.Size = new System.Drawing.Size(131, 20);
            this.txtLName.TabIndex = 5;
            // 
            // label3
            // 
            this.label3.AutoSize = true;
            this.label3.Location = new System.Drawing.Point(24, 71);
            this.label3.Name = "label3";
            this.label3.Size = new System.Drawing.Size(44, 13);
            this.label3.TabIndex = 4;
            this.label3.Text = "LName:";
            // 
            // cmbJob
            // 
            this.cmbJob.FormattingEnabled = true;
            this.cmbJob.Location = new System.Drawing.Point(102, 94);
            this.cmbJob.Name = "cmbJob";
            this.cmbJob.Size = new System.Drawing.Size(131, 21);
            this.cmbJob.TabIndex = 6;
            // 
            // label4
            // 
            this.label4.AutoSize = true;
            this.label4.Location = new System.Drawing.Point(24, 97);
            this.label4.Name = "label4";
            this.label4.Size = new System.Drawing.Size(27, 13);
            this.label4.TabIndex = 7;
            this.label4.Text = "Job:";
            // 
            // label5
            // 
            this.label5.AutoSize = true;
            this.label5.Location = new System.Drawing.Point(24, 124);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(53, 13);
            this.label5.TabIndex = 9;
            this.label5.Text = "Publisher:";
            // 
            // cmbPublisher
            // 
            this.cmbPublisher.FormattingEnabled = true;
            this.cmbPublisher.Location = new System.Drawing.Point(102, 121);
            this.cmbPublisher.Name = "cmbPublisher";
            this.cmbPublisher.Size = new System.Drawing.Size(131, 21);
            this.cmbPublisher.TabIndex = 8;
            // 
            // btnSave
            // 
            this.btnSave.Location = new System.Drawing.Point(102, 148);
            this.btnSave.Name = "btnSave";
            this.btnSave.Size = new System.Drawing.Size(64, 23);
            this.btnSave.TabIndex = 10;
            this.btnSave.Text = "Save";
            this.btnSave.UseVisualStyleBackColor = true;
            this.btnSave.Click += new System.EventHandler(this.btnSave_Click);
            // 
            // btnCancel
            // 
            this.btnCancel.Location = new System.Drawing.Point(169, 148);
            this.btnCancel.Name = "btnCancel";
            this.btnCancel.Size = new System.Drawing.Size(64, 23);
            this.btnCancel.TabIndex = 11;
            this.btnCancel.Text = "Cancel";
            this.btnCancel.UseVisualStyleBackColor = true;
            this.btnCancel.Click += new System.EventHandler(this.btnCancel_Click);
            // 
            // FrmAddEmployee
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.ClientSize = new System.Drawing.Size(255, 189);
            this.Controls.Add(this.btnCancel);
            this.Controls.Add(this.btnSave);
            this.Controls.Add(this.label5);
            this.Controls.Add(this.cmbPublisher);
            this.Controls.Add(this.label4);
            this.Controls.Add(this.cmbJob);
            this.Controls.Add(this.txtLName);
            this.Controls.Add(this.label3);
            this.Controls.Add(this.txtFName);
            this.Controls.Add(this.label2);
            this.Controls.Add(this.txtEmpId);
            this.Controls.Add(this.label1);
            this.Name = "FrmAddEmployee";
            this.Text = "Add Employee";
            this.Load += new System.EventHandler(this.FrmAddEmployee_Load);
            this.ResumeLayout(false);
            this.PerformLayout();

        }

        #endregion

        private System.Windows.Forms.Label label1;
        private System.Windows.Forms.TextBox txtEmpId;
        private System.Windows.Forms.TextBox txtFName;
        private System.Windows.Forms.Label label2;
        private System.Windows.Forms.TextBox txtLName;
        private System.Windows.Forms.Label label3;
        private System.Windows.Forms.ComboBox cmbJob;
        private System.Windows.Forms.Label label4;
        private System.Windows.Forms.Label label5;
        private System.Windows.Forms.ComboBox cmbPublisher;
        private System.Windows.Forms.Button btnSave;
        private System.Windows.Forms.Button btnCancel;
    }
}
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ADO_Employees
{

    public partial class FrmEmployees : Form
    {
        private EmployeeRepository employeeRepository = new EmployeeRepository();

        public FrmEmployees()
        {
            InitializeComponent();
        }

        private void FrmEmployees_Load(object sender, EventArgs e)
        {
            dgvEmployees.DataSource = null;

            dgvEmployees.DataSource = employeeRepository.GetEmployee();
        }

        private void btnAddEmployee_Click(object sender, EventArgs e)
        {

            FrmAddEmployee frmAddEmployee = new FrmAddEmployee(employeeRepository);

            frmAddEmployee.ShowDialog();

            dgvEmployees.DataSource = null;
            dgvEmployees.DataSource = employeeRepository.GetEmployee();

        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ADO_Employees
{
    public class Job
    {
        public Int16 JobId { get; set; }
        public string JobDesc { get; set; }

        public override string ToString()
        {
            return JobDesc;
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ADO_Employees
{
    public class Employee
    {
        public string EmpId { get; set; }
        public string FName { get; set; }
        public string LName { get; set; }
        public Int16 JobId { get; set; }
        public string PubId { get; set; }
        public DateTime HireDate { get; set; }
    }
}

using DataBaseAccess;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ADO_Employees
{
    public class EmployeeRepository
    {
        public List<Employee> GetEmployee()
        {
            string sql = $"SELECT * FROM employee";
            List<Employee> employees = GetEmployeeData(sql);
            return employees;
        }

        private List<Employee> GetEmployeeData(string sql)
        {
            Database.Instance.Connect();

            IDataReader dataReader = Database.Instance.GetDataReader(sql);

            List<Employee> employees = new List<Employee>();

            while (dataReader.Read())
            {
                string empId = dataReader["emp_id"].ToString();
                string fName = dataReader["fname"].ToString();
                string lName = dataReader["lname"].ToString();
                Int16 jobId = (Int16)dataReader["job_id"];
                string pubId = dataReader["pub_id"].ToString();
                DateTime hireDate = DateTime.Parse(dataReader["hire_date"].ToString());


                Employee employee = new Employee()
                {
                    EmpId = empId,
                    FName = fName,
                    LName = lName,
                    JobId = jobId,
                    PubId = pubId,
                    HireDate = hireDate,

                };
                employees.Add(employee);
            }
            dataReader.Close();
            Database.Instance.Disconnect();

            return employees;
        }

        public int Insert(Employee noviEmployee)
        {
            Database.Instance.Connect();

            string sql = $"INSERT INTO employee (emp_id, fname, lname, job_id, pub_id)" +
                $"VALUES ('{noviEmployee.EmpId}', '{noviEmployee.FName}', '{noviEmployee.LName}', '{noviEmployee.JobId}', '{noviEmployee.PubId}')";

            int i = Database.Instance.ExecuteCommand(sql);

            Database.Instance.Disconnect();

            return i;
        }

        public List<Publisher> GetPublisherName()
        {
            string sql = $"SELECT * FROM publishers";

            List<Publisher> publishers = GetPublisherNameData(sql);

            return publishers;
        }

        private List<Publisher> GetPublisherNameData(string sql)
        {
            Database.Instance.Connect();

            IDataReader dataReader = Database.Instance.GetDataReader(sql);

            List<Publisher> publisherList = new List<Publisher>();

            while (dataReader.Read())
            {
                string pubId = dataReader["pub_id"].ToString();
                string pubName = dataReader["pub_name"].ToString();

                Publisher pub = new Publisher()
                {
                    PubName = pubName,
                    PubId = pubId,
                };
                publisherList.Add(pub);
            }
            dataReader.Close();

            Database.Instance.Disconnect();

            return publisherList;
        }

        public List<Job> GetJobDesc()
        {
            string sql = $"SELECT * FROM jobs";

            List<Job> jobs = GetJobDescData(sql);

            return jobs;
        }

        private List<Job> GetJobDescData(string sql)
        {
            Database.Instance.Connect();

            IDataReader dataReader = Database.Instance.GetDataReader(sql);

            List<Job> jobs = new List<Job>();

            while (dataReader.Read())
            {
                Int16 jobId = (Int16)dataReader["job_id"];
                string jobDesc = dataReader["job_desc"].ToString();

                Job job = new Job()
                {
                    JobId = jobId,
                    JobDesc = jobDesc,
                };
                jobs.Add(job);
            }
            dataReader.Close();

            Database.Instance.Disconnect();

            return jobs;
        }



    }
}
