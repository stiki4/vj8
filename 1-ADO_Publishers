Logic

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Logic
{
    public class Titles
    {
        public string Id { get; set; }

        public string Name { get; set; }

        public string Type { get; set; }

        public string PublisherId { get; set; }

        public DateTime PublishDate { get; set; }

        public Titles()
        {

        }

    }
}

using DatabaseAccess;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Logic
{
    public class TitlesRepository
    {
        public List<Titles> GetTitles()
        {
            string sql = "SELECT * FROM titles";
            List<Titles> titles = GetTitlesData(sql);
            return titles;
        }

        public List<Titles> GetTitlesData(string sql)
        {
            Database.Instance.Connect();

            IDataReader dataReader = Database.Instance.GetDataReader(sql);

            List<Titles> titles = new List<Titles>();

            while (dataReader.Read())
            {
                string id = dataReader["title_id"].ToString();
                string name = dataReader["title"].ToString();
                string type = dataReader["type"].ToString();
                string publisherId = dataReader["pub_id"].ToString();
                DateTime publishDate = DateTime.Parse(dataReader["pubdate"].ToString()); 

                Titles title = new Titles()
                {
                    Id = id,
                    Name = name,
                    Type = type,
                    PublisherId = publisherId,
                    PublishDate = publishDate

                };
                titles.Add(title);

            }
            dataReader.Close();
            Database.Instance.Disconnect();

            return titles;
        }

        public int Insert(Titles title)
        {
            Database.Instance.Connect();
            string sql = $"INSERT INTO titles (title_id, title, type, pub_id, pubdate) " +
                $"VALUES ('{title.Id}','{title.Name}','{title.Type}','{title.PublisherId}','{title.PublishDate.ToString("yyyyMMdd")}')";

            int i = Database.Instance.ExecuteCommand(sql);
            Database.Instance.Disconnect();
            return i;
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Logic
{
    public class Publishers
    {
        public string Id { get; set; }
        public string Name { get; set; }

        public string City { get; set; }

        public string State { get; set; }

        public string Country { get; set; }

        public Publishers()
        {

        }

    }
}

using DatabaseAccess;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Logic
{
    public class PublishRepository
    {
        public List<Publishers> GetPublishers()
        {
            string sql = "SELECT * FROM publishers";
            List<Publishers> publishers = GetPublisherData(sql);
            return publishers;
        }

        public List<Publishers> GetPublisherData(string sql)
        {
            Database.Instance.Connect();

            IDataReader dataReader = Database.Instance.GetDataReader(sql);

            List<Publishers> publishers = new List<Publishers>();
            while (dataReader.Read())
            {
                string id = dataReader["pub_id"].ToString();
                string name = dataReader["pub_name"].ToString();
                string city = dataReader["city"].ToString();
                string state = dataReader["state"].ToString();
                string country = dataReader["country"].ToString();

                Publishers publisher = new Publishers()
                {
                    Id = id,
                    Name = name,
                    City = city,
                    State = state,
                    Country = country

                };
                publishers.Add(publisher);

            }
            dataReader.Close();
            Database.Instance.Disconnect();

            return publishers;
        }
    }
}

DatabaseAccess

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DatabaseAccess
{
    public class Database
    {
        private static Database instance;

        private string connectionString = @"Data Source = 31.147.204.119\PISERVER,1433; Initial Catalog=pubs; User=LabUser21; Password=Lab2021";

        public SqlConnection Connection { get; set; }

        public void Connect()
        {
            Connection = new SqlConnection(connectionString);
            Connection.Open();
        }

        public void Disconnect()
        {
            if (Connection.State != ConnectionState.Closed)
            {
                Connection.Close();
            }
        }

        public static Database Instance
        {
            get
            {
                if (instance == null)
                {
                    instance = new Database();
                }
                return instance;
            }
        }

        public IDataReader GetDataReader(string sqlUpit)
        {
            SqlCommand command = new SqlCommand(sqlUpit, Connection);
            return command.ExecuteReader();
        }

        public object  GetValue (string sqlUpit)
        {
            SqlCommand command = new SqlCommand(sqlUpit, Connection);
            return command.ExecuteScalar();
            
        }

        public int ExecuteCommand (string sqlUpit)
        {
            SqlCommand command = new SqlCommand (sqlUpit, Connection);
            return command.ExecuteNonQuery();
        }
    }
}

ADO_Publishers

using Logic;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ADO_Publishers
{
    public partial class FrmPublishersTitles : Form
    {
        private TitlesRepository titlesRepository = new TitlesRepository();

        private PublishRepository publishRepository = new PublishRepository(); 
        public FrmPublishersTitles()
        {
            InitializeComponent();
        }

        private void FrmPublishersTitles_Load(object sender, EventArgs e)
        {
            List<Publishers> allpublishers = publishRepository.GetPublishers();
            DisplayPublisher(allpublishers);
      
        }

        private void Osvjezi()
        {

            List<Titles> novaLista = new List<Titles>();

            List<Titles> titles = titlesRepository.GetTitles();
            Publishers odabrani = dgvPublishers.CurrentRow.DataBoundItem as Publishers;

            foreach (Titles item in titles)
            {
                if (odabrani.Id == item.PublisherId)
                {
                    novaLista.Add(item);
                }
            }
            dgvTitles.DataSource = novaLista;
        }

        private void dgvPublishers_SelectionChanged(object sender, EventArgs e)
        {

            Osvjezi();
            
        }

        private void btnAddTitle_Click(object sender, EventArgs e)
        {
            string id = txtId.Text;
            string name = txtName.Text;
            string type = txtType.Text;

            Titles newTitle = new Titles()
            {
                Id = id,
                Name = name,
                Type = type,
                PublisherId = (dgvPublishers.CurrentRow.DataBoundItem as Publishers).Id,
                PublishDate = DateTime.Now
            };
            titlesRepository.Insert(newTitle);
            Osvjezi();
            
            

        }


        private void DisplayPublisher (List<Publishers> allpublishers)
        {
            dgvPublishers.DataSource = allpublishers.ToList();
        }

        private void DisplayTitle (List <Titles> titles)
        {
            //dgvTitles.DataSource = titles.ToList();
        }
    }
}
